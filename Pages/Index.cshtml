@page
@using Newtonsoft.Json
@using youtube_dl_viewer
<!DOCTYPE html>

<html lang="en">
<head>
    <title>youtube-dl Viewer v@(Program.Version)</title>
    
    <link rel="stylesheet" type="text/css" href="/fontawesome.css">
    <link rel="stylesheet" type="text/css" href="/solid.css">
    <link rel="stylesheet" type="text/css" href="/regular.css">
    
    <link rel="stylesheet" type="text/css" href="/style.css">
    <link rel="stylesheet" type="text/css" href="/style_animation.css">
    <link rel="stylesheet" type="text/css" href="/style_width.css">
    <link rel="stylesheet" type="text/css" href="/style_video.css">
    
    <link rel="stylesheet" type="text/css" href="/style_compact.css">
    <link rel="stylesheet" type="text/css" href="/style_detailed.css">
    <link rel="stylesheet" type="text/css" href="/style_detailed_expanded.css">
    <link rel="stylesheet" type="text/css" href="/style_grid.css">
    <link rel="stylesheet" type="text/css" href="/style_tabular.css">
    
    <script src="/script.js"></script>
    
</head>

<body>

<div id="root">

    <header>
        <div class="logo">
            <div class="apptitle">youtube-dl Viewer <span class="version">@Program.Version</span></div>
            <div class="apppath @Html.Raw((Program.Args.DataDirs.Count > 1) ? "multiple" : "single")" data-dirs-path="@(JsonConvert.SerializeObject(@Program.Args.DataDirs.Select(p => p.Path).ToList()))" data-dirs-name="@(JsonConvert.SerializeObject(@Program.Args.DataDirs.Select(p => p.Name).ToList()))" data-initial="0">
                <span>@Program.Args.DataDirs.First().Name</span>
                <i class="fas fa-chevron-down"></i>
            </div>
            <div id="apppath_dropdown" class="dropdown hidden">
                @for (var i = 0; i < Program.Args.DataDirs.Count; i++)
                {
                    <div class="row" data-path="@Program.Args.DataDirs[i].Path" data-name="@Program.Args.DataDirs[i].Name" data-idx="@i">@Program.Args.DataDirs[i].Name</div>
                }
            </div>
        </div>

        <div class="buttons">
            <a class="btn btn-jobpanel" target="_blank" href="/Jobs"><i class="fas fa-terminal"></i></a>
            
            <div class="btnpad"></div>
            
            <div class="btn btn-display"        
                 data-mode="@Program.Args.OptDisplayMode"  
                 data-initial="@Program.Args.OptDisplayMode"
                 data-options="@(Json.Serialize(new[]{"ListStyle: Grid", "ListStyle: Compact", "ListStyle: Tabular", "ListStyle: Detailed"}).ToString())"
                 ><i class="far fa-eye"></i></div>
            
            <div class="btn btn-order"          
                 data-mode="@Program.Args.OptOrderMode"  
                 data-initial="@Program.Args.OptOrderMode"  
                 data-options="@(Json.Serialize(new[]{"Sorting: Date [descending]", "Sorting: Date [ascending]", "Sorting: Title", "Sorting: Category", "Sorting: Views", "Sorting: Rating", "Sorting: Uploader", "Sorting: Random" }).ToString())"
                 ><i class="fas fa-sort"></i></div>
            
            <div class="btn btn-width"          
                 data-mode="@Program.Args.OptWidthMode"  
                 data-initial="@Program.Args.OptWidthMode"  
                 data-options="@(Json.Serialize(new[]{"Width: Small", "Width: Medium", "Width: Wide", "Width: Full" }).ToString())"
                 ><i class="fas fa-text-width"></i></div>
            
            <div class="btn btn-loadthumbnails" 
                 data-mode="@Program.Args.OptThumbnailMode"  
                 data-initial="@Program.Args.OptThumbnailMode"  
                 data-options="@(Json.Serialize(new[]{"Thumbnails: Off", "Thumbnails: On (intelligent)", "Thumbnails: On (sequential)", "Thumbnails: On (parallel)" }).ToString())"
                 ><i class="fas fa-photo-video"></i></div>
            
            <div class="btn btn-videomode"      
                 data-mode="@Program.Args.OptVideoMode"
                 data-initial="@Program.Args.OptVideoMode"
                 data-options="@(Json.Serialize(new[]{"Playback: Disabled", "Playback: Seekable raw file", "Playback: Raw file", "Playback: Transcoded Webm stream", "Playback: Download file", "Playback: VLC Protocol Link (stream)", "Playback: VLC Protocol Link (local)" }).ToString())"
                 ><i class="fas fa-broadcast-tower"></i></div>
            
            <div class="btnpad"></div>
            
            <div class="btn btn-refresh"><i class="fas fa-sync-alt"></i></div>
            
            <div id="option_dropdown" class="dropdown hidden"></div>
        </div>

    </header>

    <main data-has_ffmpeg="@Program.HasValidFFMPEG" data-has_cache="@(Program.Args.CacheDir != null)">
        <div class="lstyle_detailed lstyle_width_medium" id="content">
            <!-- js -->
        </div>
        
        <div class="lds-grid"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
    </main>

    <footer>
        <hr/>
        youtube-dl Viewer (c) <a href="https://www.mikescher.com">mikescher.com</a> 2020
    </footer>

    <div id="dropdown_background" class="hidden">&nbsp;</div>

</div>

<div id="font_test_header">X</div>

<div id="toast"></div>

</body>
</html>